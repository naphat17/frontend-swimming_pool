// Debug script ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏õ‡∏±‡∏ç‡∏´‡∏≤ 403 Forbidden ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á /api/admin/pools
// ‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡πÑ‡∏î‡πâ‡πÅ‡∏•‡∏∞‡∏ß‡∏¥‡∏ò‡∏µ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç

const jwt = require('jsonwebtoken');
const db = require('./api/config/database');

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö JWT Secret
const JWT_SECRET = process.env.JWT_SECRET || 'your-secret-key';
console.log('üîë JWT Secret:', JWT_SECRET);

async function debugAdminAccess() {
    try {
        console.log('\n=== ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏õ‡∏±‡∏ç‡∏´‡∏≤ 403 Forbidden ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö /api/admin/pools ===\n');
        
        // 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ admin user ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        console.log('1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Admin Users ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö:');
        const [adminUsers] = await db.execute(
            "SELECT id, username, email, role, status FROM users WHERE role = 'admin'"
        );
        
        if (adminUsers.length === 0) {
            console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö admin user ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö');
            console.log('üí° ‡∏ß‡∏¥‡∏ò‡∏µ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ‡∏£‡∏±‡∏ô script ‡∏™‡∏£‡πâ‡∏≤‡∏á admin');
            console.log('   cd api && node scripts/create-admin.js');
            return;
        }
        
        console.log('‚úÖ ‡∏û‡∏ö Admin Users:');
        adminUsers.forEach(user => {
            console.log(`   - ${user.username} (${user.email}) - Status: ${user.status}`);
        });
        
        // 2. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á token ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö admin
        console.log('\n2. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á JWT Token ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Admin:');
        const adminUser = adminUsers[0];
        const testToken = jwt.sign(
            {
                id: adminUser.id,
                username: adminUser.username,
                role: adminUser.role
            },
            JWT_SECRET,
            { expiresIn: '24h' }
        );
        
        console.log('‚úÖ Token ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:');
        console.log(`   Token: ${testToken.substring(0, 50)}...`);
        
        // 3. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£ verify token
        console.log('\n3. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£ Verify Token:');
        try {
            const decoded = jwt.verify(testToken, JWT_SECRET);
            console.log('‚úÖ Token verify ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:');
            console.log(`   User ID: ${decoded.id}`);
            console.log(`   Username: ${decoded.username}`);
            console.log(`   Role: ${decoded.role}`);
            
            if (decoded.role !== 'admin') {
                console.log('‚ùå Role ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà admin');
            } else {
                console.log('‚úÖ Role ‡πÄ‡∏õ‡πá‡∏ô admin ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á');
            }
        } catch (verifyError) {
            console.log('‚ùå Token verify ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', verifyError.message);
        }
        
        // 4. ‡πÅ‡∏™‡∏î‡∏á‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
        console.log('\n=== ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ===');
        console.log('1. Login ‡∏î‡πâ‡∏ß‡∏¢ admin credentials:');
        console.log('   POST https://backend-l7q9.onrender.com/api/auth/login');
        console.log('   Body: { "username": "admin", "password": "admin123" }');
        console.log('');
        console.log('2. ‡πÉ‡∏ä‡πâ token ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å login response:');
        console.log('   GET https://backend-l7q9.onrender.com/api/admin/pools');
        console.log('   Headers: { "Authorization": "Bearer YOUR_TOKEN_HERE" }');
        console.log('');
        console.log('3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö token ‡πÉ‡∏ô browser:');
        console.log('   - ‡πÄ‡∏õ‡∏¥‡∏î Developer Tools (F12)');
        console.log('   - ‡πÑ‡∏õ‡∏ó‡∏µ‡πà Application/Storage > Local Storage');
        console.log('   - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ token ‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà');
        console.log('   - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ token ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏');
        
        console.log('\n=== ‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡πÑ‡∏î‡πâ‡∏Ç‡∏≠‡∏á 403 Forbidden ===');
        console.log('1. ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏™‡πà‡∏á Authorization header');
        console.log('2. Token ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏ (24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á)');
        console.log('3. Token ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á');
        console.log('4. User role ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà admin');
        console.log('5. JWT_SECRET ‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô');
        
        console.log('\n=== ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏î‡πâ‡∏ß‡∏¢ curl ===');
        console.log('# 1. Login');
        console.log('curl -X POST https://backend-l7q9.onrender.com/api/auth/login \\');
        console.log('  -H "Content-Type: application/json" \\');
        console.log('  -d \'{ "username": "admin", "password": "admin123" }\'');
        console.log('');
        console.log('# 2. ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á admin pools (‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà YOUR_TOKEN ‡∏î‡πâ‡∏ß‡∏¢ token ‡∏à‡∏≤‡∏Å‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 1)');
        console.log('curl -X GET https://backend-l7q9.onrender.com/api/admin/pools \\');
        console.log('  -H "Authorization: Bearer YOUR_TOKEN"');
        
    } catch (error) {
        console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error);
    } finally {
        process.exit(0);
    }
}

// ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ function
debugAdminAccess();